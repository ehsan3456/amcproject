"""
Django settings for mysmswebap project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u(5h)8)-&bgcxbmi8j+dsgp^wl#l0jdq8fq69vu+2jvcfjpmh2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework.authtoken',
    'rest_framework',
    'corsheaders',
    'smswebportal',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'mysmswebap.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysmswebap.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mysms_db',
        'USER': 'root',
        'PASSWORD': 'Ehsan123+_',
        'HOST':'localhost',
        'PORT':'3306',
    }
    
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOWED_ORIGINS = [
#     'http://localhost:3000',
    
#     'http://127.0.0.1:8000',
# ]

# CORS_ALLOW_CREDENTIALS = True  # Allow credentials (cookies, etc.)
# CSRF_COOKIE_HTTPONLY = False
# CSRF_COOKIE_NAME = 'csrftoken'  # Ensure this matches the cookie name you're looking for in React
# CSRF_COOKIE_SECURE = False  # Set to True in production with HTTPS
# CORS_ALLOW_CREDENTIALS = True  # Im

# CORS_ALLOW_HEADERS = '*' # <-------- this
# CSRF_TRUSTED_ORIGINS = ["http://127.0.0.1:8000/sendmessage/","http://localhost:3000",'https://localhost:3000','http://127.0.0.1:8000/login/'] 
# CORS_ALLOW_HEADERS = [
#     'content-type',  # Allow Content-Type header
#     'X-CSRFToken',   # If you're passing CSRF token in the header
#     'Authorization',  # If you're passing Authorization headers
#     # You can add any other headers here that you want to allow
# ]
# CSRF_COOKIE_NAME = 'csrftoken'  # Default name for the CSRF cookie
# CSRF_COOKIE_HTTPONLY = True      # Should be False to allow JavaScript access
# CSRF_COOKIE_SECURE = False 

# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.SessionAuthentication',  # Allows session-based authentication
#         'rest_framework.authentication.BasicAuthentication',  # Basic Auth (optional)
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',  # Ensures authentication for all API views by default
#         'rest_framework.permissions.IsAdminUser'
#     ],
# }
CSRF_COOKIE_NAME = 'csrftoken'  # Default name for the CSRF cookie
CSRF_COOKIE_HTTPONLY = False    # Should be False to allow JavaScript access
CSRF_COOKIE_SECURE = False      # Set to True in production with HTTPS
CSRF_TRUSTED_ORIGINS = [
    "http://127.0.0.1:8000/",  # Add trusted origins here
    "http://localhost:3000",
]

CORS_ALLOW_ALL_ORIGINS = False  # Set this to False for security reasons in production
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'http://127.0.0.1:8000',  # Add any other origins if needed
]
CORS_ALLOW_CREDENTIALS = True  # Allow credentials (cookies)

# CORS settings to allow CSRF token in headers
CORS_ALLOW_HEADERS = [
    'content-type',  # Allow Content-Type header
    'X-CSRFToken',   # If you're passing CSRF token in the header
    'Authorization',  # If you're passing Authorization headers
]

REST_FRAMEWORK = {
     'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    }
import os

# Use the PORT environment variable if it's set, otherwise default to 8080
PORT = int(os.environ.get('PORT', 8080))